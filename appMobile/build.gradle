apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"
//apply plugin: 'com.google.gms.google-services'

//load app.properties
def appPropertiesFile = rootProject.file("app.properties")
def appPropertiesObject = new Properties()
//load all properties into appPropertiesObject
appPropertiesObject.load(new FileInputStream(appPropertiesFile))

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        applicationId "io.android.projectx"

        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        testInstrumentationRunner "io.android.projectx.presentation.test.TestRunner"

        versionCode rootProject.ext.app_version_code
        versionName "1.0.0"
        setProperty("archivesBaseName",
                "ProjectX_" + new Date().format("HHmm-dd-MM-yy")
                        + "_vn" + versionName + "_vc" + versionCode)
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions { jvmTarget = "1.8" }
    dexOptions { javaMaxHeapSize "3g" }
    lintOptions { abortOnError false }

    signingConfigs {
        release {
            storeFile file(appPropertiesObject['storeFile'])
            storePassword appPropertiesObject['storePassword']
            keyAlias appPropertiesObject['keyAlias']
            keyPassword appPropertiesObject['keyPassword']
        }
    }

    flavorDimensions "default"
    productFlavors {
        production {
            applicationId "io.android.projectx"
            dimension "default"
            // ConfigFields
            buildConfigField("String", "API_BASE_URL", "\"${production_api_base_url}\"")
        }
        staging {
            applicationId "io.android.projectx"
            dimension "default"
            versionNameSuffix "-staging"
            // ConfigFields
            buildConfigField("String", "API_BASE_URL", "\"${staging_api_base_url}\"")
        }
        dev {
            applicationId "io.android.projectx"
            dimension "default"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            // ConfigFields
            buildConfigField("String", "API_BASE_URL", "\"${quality_api_base_url}\"")
        }
    }

    buildTypes {
        debug {
            if (applicationIdSuffix == "") {
                applicationIdSuffix ".dev"
            }
            //to speed up build disable Crashlytics plugin for debug builds
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation project(':Domain')
    implementation project(':Data')

    implementation project(':extensions')
    implementation project(':androidextensions')
    implementation project(':widget')

    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies

    implementation presentationDependencies.javaxAnnotation
    implementation presentationDependencies.javaxInject
    implementation presentationDependencies.rxKotlin
    implementation presentationDependencies.kotlin
    implementation presentationDependencies.rxAndroid
    implementation presentationDependencies.androidxCoreKtx
    implementation presentationDependencies.fragmentKtx
    implementation presentationDependencies.androidxAnnotations
    implementation presentationDependencies.lifecycleRuntime
    implementation presentationDependencies.lifecycleExtensions
    implementation presentationDependencies.lifecycleViewmodel
    implementation presentationDependencies.lifecycleLivedata
    implementation presentationDependencies.roomRuntime
    implementation presentationDependencies.roomRxJava
    implementation presentationDependencies.legacyV4
    implementation presentationDependencies.legacyV13
    implementation presentationDependencies.appCompat
    implementation presentationDependencies.recyclerView
    implementation presentationDependencies.constraintlayout
    implementation presentationDependencies.material
    implementation presentationDependencies.timber
    implementation presentationDependencies.glide
    implementation presentationDependencies.okHttp
    implementation presentationDependencies.okHttpLogger
    implementation presentationDependencies.gson
    implementation presentationDependencies.navigationFragmentKtx
    implementation presentationDependencies.navigationUiKtx
    implementation presentationDependencies.navigationDynamic
    implementation presentationDependencies.firebaseAnalytics
    implementation presentationDependencies.firebaseMessaging
    implementation presentationDependencies.firebaseConfig
    kapt presentationDependencies.lifecycleCompiler
    kapt presentationDependencies.roomCompiler
    // Firebase ML Kit dependencies
    implementation presentationDependencies.firebaseMlVision
    // CameraX
    implementation presentationDependencies.cameraCore
    implementation presentationDependencies.cameraCamera2

    //dagger
    implementation presentationDependencies.dagger
    kapt presentationDependencies.daggerCompiler

    implementation presentationDependencies.daggerAndroid
    implementation presentationDependencies.daggerAndroidSupport
    kapt presentationDependencies.daggerAndroidProcessor

    testImplementation presentationTestDependencies.junit
    testImplementation presentationTestDependencies.kotlinJUnit
    testImplementation presentationTestDependencies.assertj
    testImplementation presentationTestDependencies.mockito
    testImplementation presentationTestDependencies.mockitoAndroid
    testImplementation presentationTestDependencies.robolectric
    testImplementation presentationTestDependencies.archTesting
    kaptTest presentationDependencies.daggerCompiler

    // Instrumentation test dependencies
    androidTestImplementation presentationTestDependencies.junit
    androidTestImplementation presentationTestDependencies.mockito
    androidTestImplementation presentationTestDependencies.mockitoAndroid
    androidTestImplementation presentationTestDependencies.espressoCore
    androidTestImplementation presentationTestDependencies.androidxRunner
    androidTestImplementation presentationTestDependencies.androidxRules
    androidTestImplementation presentationTestDependencies.espressoIntents
    androidTestImplementation presentationTestDependencies.espressoContrib
    // Testing Navigation
    androidTestImplementation presentationTestDependencies.navigationtesting
}