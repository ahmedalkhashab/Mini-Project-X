apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.incremental"     : "true",
                             "room.expandProjection": "true",
                             "room.schemaLocation"  : "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation project(':extensions')

    //data
    def dataDependencies = rootProject.ext.dataDependencies
    def dataTestDependencies = rootProject.ext.dataTestDependencies
    implementation project(':Domain')
    implementation dataDependencies.javaxAnnotation
    implementation dataDependencies.javaxInject
    implementation dataDependencies.rxKotlin
    implementation dataDependencies.kotlin
    //dagger
    implementation dataDependencies.dagger
    kapt dataDependencies.daggerCompiler
    implementation dataDependencies.daggerAndroid
    implementation dataDependencies.daggerAndroidSupport
    kapt dataDependencies.daggerAndroidProcessor

    testImplementation dataTestDependencies.junit
    testImplementation dataTestDependencies.kotlinJUnit
    testImplementation dataTestDependencies.mockito
    testImplementation dataTestDependencies.assertj
    //dagger
    kaptTest dataDependencies.daggerCompiler

    //remote
    def remoteDependencies = rootProject.ext.remoteDependencies
    def remoteTestDependencies = rootProject.ext.remoteTestDependencies
    implementation remoteDependencies.gson
    implementation remoteDependencies.okHttp
    implementation remoteDependencies.okHttpLogger
    implementation remoteDependencies.retrofit
    implementation remoteDependencies.retrofitConverter
    implementation remoteDependencies.retrofitAdapter

    //cache
    def cacheDependencies = rootProject.ext.cacheDependencies
    def cacheTestDependencies = rootProject.ext.cacheTestDependencies
    //core-ktx
    implementation cacheDependencies.androidxCoreKtx
    //room
    implementation cacheDependencies.roomRuntime
    implementation cacheDependencies.roomRxJava
    //gson [called with remote]
    //implementation cacheDependencies.gson
    kapt cacheDependencies.roomCompiler
    testImplementation cacheTestDependencies.robolectric
    testImplementation cacheTestDependencies.archTesting
    testImplementation cacheTestDependencies.roomTesting
    testImplementation cacheTestDependencies.androidxTestCore
}